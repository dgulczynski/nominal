open Nominal
open Nominal.Prelude
open Nominal.IncProof
open Nominal.Parser
open Nominal.Proof
open Nominal.ProofEnv
open Nominal.ProofException
open Nominal.Prover
open Nominal.ProverInternals
open Nominal.ProverGoal
open Nominal.Tactics
open Nominal.Types
open Nominal.Permutation
open Nominal.Solver
open Nominal.PrettyPrinting
open Nominal.PrettyPrintingCore

let pp_print_constr = printer_to_pp_printer pretty_constr []

let pp_print_formula = printer_to_pp_printer pretty_formula []

let pp_print_goal = printer_to_pp_printer pretty_goal []

let pp_print_judgement = printer_to_pp_printer pretty_judgement []

let pp_print_kind = printer_to_pp_printer pretty_kind []

let pp_print_term = printer_to_pp_printer pretty_term []

let pp_print_env fmt env = printer_to_pp_printer pretty_bound_env env fmt env

let pp_print_state = printer_to_pp_printer pretty_prover_state [] ;;

#install_printer pp_print_constr

#install_printer pp_print_formula

#install_printer pp_print_goal

#install_printer pp_print_judgement

#install_printer pp_print_kind

#install_printer pp_print_term

#install_printer pp_print_env

#install_printer pp_print_state
